'''
UHPPOTE request packet encoder unit tests.

Tests the packet encoding functions.
'''

import unittest
import datetime

from ipaddress import IPv4Address
from uhppoted import encode


class TestEncode(unittest.TestCase):

    def test_set_listener_request(self):
        '''
        Tests message encoding for a set-listener request without an auto-send interval.
        '''
        # yapf: disable
        expected = bytearray([
            0x17, 0x90, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0xc0, 0xa8, 0x01, 0x64, 0x61, 0xea, 0x0f, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ])
        # yapf: enable

        request = encode.set_listener_request(405419896, IPv4Address('192.168.1.100'), 60001, 15)

        self.assertEqual(request, expected)

    def test_set_listener_request_without_interval(self):
        '''
        Tests message encoding for a set-listener request without an auto-send interval.
        '''
        # yapf: disable
        expected = bytearray([
            0x17, 0x90, 0x00, 0x00, 0x78, 0x37, 0x2a, 0x18, 0xc0, 0xa8, 0x01, 0x64, 0x61, 0xea, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        ])
        # yapf: enable

        request = encode.set_listener_request(405419896, IPv4Address('192.168.1.100'), 60001)

        self.assertEqual(request, expected)


if __name__ == '__main__':
    unittest.main()
